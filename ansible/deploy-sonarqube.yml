---
- name: Deploy SonarQube on VM
  hosts: sonarqube_servers
  become: yes
  vars:
    sonarqube_version: "community"
    sonarqube_port: 9000
    docker_compose_version: "1.29.2"
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3
          - python3-pip
          - ufw
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create SonarQube directory
      file:
        path: /opt/sonarqube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy docker-compose.yml for SonarQube
      copy:
        content: |
          version: '3.8'
          services:
            sonarqube:
              image: sonarqube:{{ sonarqube_version }}
              container_name: sonarqube
              restart: unless-stopped
              environment:
                - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
                - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
                - SONAR_JDBC_USERNAME=sonar
                - SONAR_JDBC_PASSWORD=sonar
              ports:
                - "{{ sonarqube_port }}:9000"
              volumes:
                - sonarqube_data:/opt/sonarqube/data
                - sonarqube_logs:/opt/sonarqube/logs
                - sonarqube_extensions:/opt/sonarqube/extensions
              depends_on:
                - db
              networks:
                - sonarnet

            db:
              image: postgres:13
              container_name: sonarqube_db
              restart: unless-stopped
              environment:
                - POSTGRES_USER=sonar
                - POSTGRES_PASSWORD=sonar
                - POSTGRES_DB=sonar
              volumes:
                - postgresql_data:/var/lib/postgresql/data
              networks:
                - sonarnet

          volumes:
            sonarqube_data:
            sonarqube_logs:
            sonarqube_extensions:
            postgresql_data:

          networks:
            sonarnet:
              driver: bridge
        dest: /opt/sonarqube/docker-compose.yml
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Configure UFW firewall
      ufw:
        rule: allow
        port: "{{ sonarqube_port }}"
        proto: tcp

    - name: Enable UFW
      ufw:
        state: enabled

    - name: Set vm.max_map_count for Elasticsearch
      sysctl:
        name: vm.max_map_count
        value: 524288
        state: present
        reload: yes

    - name: Start SonarQube services
      docker_compose:
        project_src: /opt/sonarqube
        state: present

    - name: Wait for SonarQube to start
      uri:
        url: "http://localhost:{{ sonarqube_port }}/api/system/status"
        method: GET
        status_code: 200
      register: sonarqube_status
      until: sonarqube_status.json.status == "UP"
      retries: 30
      delay: 10

    - name: Display SonarQube info
      debug:
        msg: |
          SonarQube has been successfully deployed!
          URL: http://{{ ansible_host }}:{{ sonarqube_port }}
          Default credentials:
            Username: admin
            Password: admin (please change on first login)
          
          Next steps:
          1. Access SonarQube web interface
          2. Change default admin password
          3. Create a new project with key: cybervault
          4. Generate an analysis token
          5. Update GitHub secrets with the token and this URL